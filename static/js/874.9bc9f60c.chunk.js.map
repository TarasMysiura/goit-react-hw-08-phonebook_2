{"version":3,"file":"static/js/874.9bc9f60c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = (timestamp) => {\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing)\n            scheduleNextBatch(processBatch);\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.15.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.15.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","callback","forceRender","useContext","LayoutGroupContext","useState","forcedRenderCount","setForcedRenderCount","useCallback","frame","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","removeIndex","findIndex","presentChild","splice","cloneElement","createContext","stepsOrder","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","process","frameData","createRenderStep","processStep","stepId","processBatch","Math","max","min","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}